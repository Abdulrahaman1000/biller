{"ast":null,"code":"var _jsxFileName = \"C:\\\\All Projects\\\\billerr\\\\DataNowUserReact3\\\\src\\\\pages\\\\Cable\\\\Cable.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from 'react';\nimport WalletCardNSI from '../../components/WalletCardNSI';\nimport WalletCardSI from '../../components/WalletCardSI';\nimport { UserContext } from '../../Store/UserContext';\nimport { AppDataContext } from '../../Store/AppDataContext';\nimport API from '../../helpers/API';\nimport { useForm } from 'react-hook-form';\nimport { Alert, Col, Dropdown, Row } from 'react-bootstrap';\nimport loader from '../../images/loader.gif';\nimport dstv from '../../images/dstv.png';\nimport gotv from '../../images/gotv.png';\nimport startimes from '../../images/startimes.png';\nimport profileDropdownImg from '../../images/profileDropdownImg.svg';\nimport PaymentCard from '../../components/PaymentCard';\nimport { formatCurrency } from '../../helpers/utils';\nimport Notification from '../../components/Notification';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Cable = () => {\n  _s();\n\n  const {\n    user,\n    userDispatch\n  } = useContext(UserContext);\n  const [paymentSelectorVisibility, setPaymentSelectorVisibility] = useState(false);\n  const {\n    appData,\n    dispatch\n  } = useContext(AppDataContext);\n  const [error, setError] = useState('');\n  const [notification, setNotification] = useState(false);\n  const [notificationMessage, setNotificationMessage] = useState('');\n  const [loaderClass, setLoaderClass] = useState('none');\n  const [buttonClass, setButtonClass] = useState('inline');\n  const [confirmationLoading, setConfirmationLoading] = useState('none');\n  const {\n    register,\n    setValue,\n    getValues,\n    formState: {\n      errors,\n      isDirty,\n      isValid\n    }\n  } = useForm({\n    mode: \"onChange\"\n  });\n\n  const onSubmit = paymentMethod => {\n    if (loaderClass === 'inline') return;\n    setError('');\n    setLoaderClass('inline');\n    setButtonClass('none');\n    API('post', 'cablePurchase', {\n      planId: plan.id,\n      ...paymentMethod,\n      ...getValues()\n    }, onSuccess, onFail, user.data && user.token);\n  };\n\n  function onSuccess(data) {\n    console.log(data);\n\n    if (data.data.payment_url) {\n      window.location = data.data.payment_url.data.link;\n    } else {\n      //if it wasn't an ATM transfer, display modal\n      setNotification(true);\n      setNotificationMessage(data.message);\n    }\n  }\n\n  function onFail(error) {\n    setError(error);\n    setLoaderClass('none');\n    setButtonClass('inline');\n  }\n\n  function onVerificationFail(error) {\n    setConfirmationLoading('none');\n    setSmartcardName('');\n  }\n\n  function verifySmartcardName(value) {\n    API('post', 'verifySmartcard', {\n      planId: plan.id,\n      smartcardNumber: value\n    }, onRetrieveSmarcardName, onVerificationFail, user.data && user.token);\n  }\n\n  function onRetrieveSmarcardName(data) {\n    setConfirmationLoading('none');\n    setSmartcardName(data.data.Customer_Name);\n  }\n\n  const [smartcardName, setSmartcardName] = useState('');\n  const [provider, setSelectedProvider] = useState({});\n  const [plan, setSelectedPlan] = useState({});\n  const providers = {\n    DSTV: {\n      img: dstv,\n      name: 'DSTV'\n    },\n    GOTV: {\n      img: gotv,\n      name: 'GOTV'\n    },\n    STARTIMES: {\n      img: startimes,\n      name: 'STARTIMES'\n    }\n  };\n\n  function selectProvider(provider) {\n    setSelectedPlan({});\n    const objectValues = Object.values(providers);\n    objectValues.map(net => {\n      if (net.name == provider) {\n        setSelectedProvider(net);\n      }\n    });\n  }\n\n  if (notification) return /*#__PURE__*/_jsxDEV(Notification, {\n    message: notificationMessage\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 30\n  }, this);else return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-48-16 w-100\",\n    children: [/*#__PURE__*/_jsxDEV(PaymentCard, {\n      onSubmit: onSubmit,\n      paymentSelectorVisibility: paymentSelectorVisibility,\n      setPaymentSelectorVisibility: setPaymentSelectorVisibility,\n      amount: plan.userPrice * plan.price / 100\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-p t-26\",\n      children: \"Cable Purchase\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"t-14\",\n      children: \"Purchase your Cable TV Plans\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 17\n    }, this), user.data ? /*#__PURE__*/_jsxDEV(WalletCardSI, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 30\n    }, this) : /*#__PURE__*/_jsxDEV(WalletCardNSI, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 49\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n      className: \"mt-0 mb-3 pt-0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-4\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \" mb-3 text-start\",\n        children: [errors.required && /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"This field is required\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 45\n        }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n          className: \"bg-danger text-white\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 35\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"t-16-14 pt-4 m-0 mb-1\",\n          children: \"Select Provider\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n          children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n            className: \"w-100 bg-white text-black form-input  align-items-center\",\n            bsPrefix: \"p-0\",\n            id: \"dropdown-basic\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-start  w-100 m-1  align-items-center \",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: provider.img,\n                width: 40\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"mt-2 float-end  me-3 t-16 text-s \",\n                children: [provider.name, /*#__PURE__*/_jsxDEV(\"img\", {\n                  className: \"  ms-3 me-2 \",\n                  src: profileDropdownImg\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n            className: \"w-100 \",\n            children: Object.values(providers).map((provider, index) => {\n              return /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                className: \"  align-items-center\",\n                onClick: () => selectProvider(provider.name),\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"  align-items-center w-100 m-2 \",\n                  children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                    src: provider.img,\n                    width: 40\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 162,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \" float-end mt-2 me-3 t-16 text-s\",\n                    children: provider.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 163,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 161,\n                  columnNumber: 45\n                }, this)\n              }, 'selector' + index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 41\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"t-16-14 pt-4 m-0 mb-1\",\n          children: \"Select Cable Plan\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n          children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n            className: \"w-100 bg-white text-black form-input  align-items-center\",\n            bsPrefix: \"p-0\",\n            id: \"dropdown-basic\",\n            children: /*#__PURE__*/_jsxDEV(Row, {\n              className: \"    m-2 \",\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                xs: \"8\",\n                className: \"text-start\",\n                children: plan.tarrifPlan\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                xs: \"4\",\n                className: \"text-end\",\n                children: plan.userPrice && /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: [\"\\u20A6\", formatCurrency(plan.userPrice * plan.price / 100)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 187,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n            className: \"w-100 \",\n            children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n              className: \"  align-items-end\",\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                className: \"    m-2 \",\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  xs: \"8\",\n                  children: \"Plan\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 195,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  xs: \"4\",\n                  className: \" text-end\",\n                  children: \"Price\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 196,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 33\n            }, this), provider.name && Object.values(appData.cablePlans[provider.name]).map((plan, index) => {\n              return /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                className: \"  align-items-center\",\n                onClick: () => setSelectedPlan(plan),\n                children: /*#__PURE__*/_jsxDEV(Row, {\n                  className: \"    m-2 \",\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    xs: \"8\",\n                    children: plan.tarrifPlan\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 210,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    xs: \"4\",\n                    className: \" text-end\",\n                    children: [\"\\u20A6\", formatCurrency(plan.userPrice * plan.price / 100)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 211,\n                    columnNumber: 53\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 209,\n                  columnNumber: 49\n                }, this)\n              }, 'selector' + index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 45\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"t-16-14 pt-4 m-0 mb-1\",\n          children: \"Smartcard Number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-input form-control  mt-1 mb-2\",\n          ...register(\"smartcardNumber\", {\n            required: true,\n            minLength: 8,\n            pattern: {\n              value: /^[0-9]*$/,\n              message: \"invalid Smartcard Number\"\n            },\n            onChange: e => {\n              var value = e.target.value.replace(/\\D/g, '');\n              setValue('smartcardNumber', value);\n\n              if (value.length > 9) {\n                verifySmartcardName(value);\n                setConfirmationLoading('inline');\n              }\n            }\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"text-p text-underline\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"loader-icon\",\n            src: loader,\n            style: {\n              display: confirmationLoading\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 25\n          }, this), smartcardName && smartcardName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"form-control mt-4 button\",\n          onClick: e => {\n            e.preventDefault();\n            setPaymentSelectorVisibility(true);\n          },\n          disabled: !smartcardName,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              display: buttonClass\n            },\n            children: \"Proceed to Pay\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"loader-icon\",\n            src: loader,\n            style: {\n              display: loaderClass\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 13\n  }, this);\n};\n\n_s(Cable, \"aYJ6ZQI7JkkCO+okDLD8XIuqOYc=\", false, function () {\n  return [useForm];\n});\n\n_c = Cable;\nexport default Cable;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cable\");","map":{"version":3,"sources":["C:/All Projects/billerr/DataNowUserReact3/src/pages/Cable/Cable.tsx"],"names":["React","useState","useContext","WalletCardNSI","WalletCardSI","UserContext","AppDataContext","API","useForm","Alert","Col","Dropdown","Row","loader","dstv","gotv","startimes","profileDropdownImg","PaymentCard","formatCurrency","Notification","Cable","user","userDispatch","paymentSelectorVisibility","setPaymentSelectorVisibility","appData","dispatch","error","setError","notification","setNotification","notificationMessage","setNotificationMessage","loaderClass","setLoaderClass","buttonClass","setButtonClass","confirmationLoading","setConfirmationLoading","register","setValue","getValues","formState","errors","isDirty","isValid","mode","onSubmit","paymentMethod","planId","plan","id","onSuccess","onFail","data","token","console","log","payment_url","window","location","link","message","onVerificationFail","setSmartcardName","verifySmartcardName","value","smartcardNumber","onRetrieveSmarcardName","Customer_Name","smartcardName","provider","setSelectedProvider","setSelectedPlan","providers","DSTV","img","name","GOTV","STARTIMES","selectProvider","objectValues","Object","values","map","net","userPrice","price","required","index","tarrifPlan","cablePlans","minLength","pattern","onChange","e","target","replace","length","display","preventDefault"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\r\nimport WalletCardNSI from '../../components/WalletCardNSI';\r\nimport WalletCardSI from '../../components/WalletCardSI';\r\nimport { UserContext } from '../../Store/UserContext';\r\nimport { AppDataContext } from '../../Store/AppDataContext';\r\nimport API from '../../helpers/API';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useForm } from 'react-hook-form';\r\nimport { Alert, Col, Dropdown, Row } from 'react-bootstrap';\r\nimport loader from '../../images/loader.gif';\r\nimport dstv from '../../images/dstv.png';\r\nimport gotv from '../../images/gotv.png';\r\nimport startimes from '../../images/startimes.png';\r\nimport profileDropdownImg from '../../images/profileDropdownImg.svg';\r\nimport PaymentCard from '../../components/PaymentCard';\r\nimport { formatCurrency } from '../../helpers/utils';\r\nimport Notification from '../../components/Notification';\r\n\r\nconst Cable = () => {\r\n    const { user, userDispatch } = useContext(UserContext);\r\n    const [paymentSelectorVisibility, setPaymentSelectorVisibility] = useState(false);\r\n    const { appData, dispatch } = useContext(AppDataContext);\r\n\r\n    const [error, setError] = useState('');\r\n    const [notification, setNotification] = useState(false);\r\n    const [notificationMessage, setNotificationMessage] = useState('');\r\n\r\n \r\n    const [loaderClass, setLoaderClass] = useState('none');\r\n    const [buttonClass, setButtonClass] = useState('inline');\r\n    const [confirmationLoading, setConfirmationLoading] = useState('none');\r\n\r\n    const {\r\n        register,\r\n        setValue,\r\n         getValues,\r\n        formState: { errors ,isDirty,isValid},\r\n    } = useForm({ mode: \"onChange\" });\r\n\r\n    const onSubmit = (paymentMethod: any) => {\r\n        if (loaderClass === 'inline') return;\r\n        setError('');\r\n        setLoaderClass('inline');\r\n        setButtonClass('none');\r\n\r\n        API(\r\n            'post',\r\n            'cablePurchase',\r\n            { planId: plan.id, ...paymentMethod,  ...getValues() },\r\n            onSuccess,\r\n            onFail,\r\n            user.data && user.token,\r\n        );\r\n    };\r\n\r\n    function onSuccess(data: any) {\r\n        console.log(data);\r\n        if (data.data.payment_url) {\r\n            window.location = data.data.payment_url.data.link;\r\n        } else {\r\n            //if it wasn't an ATM transfer, display modal\r\n            setNotification(true);\r\n            setNotificationMessage(data.message);\r\n        }\r\n    }\r\n\r\n    function onFail(error: string) {\r\n        setError(error);\r\n        setLoaderClass('none');\r\n        setButtonClass('inline');\r\n\r\n    }\r\n\r\n    function onVerificationFail(error:string){\r\n        setConfirmationLoading('none')\r\n        setSmartcardName('');\r\n    }\r\n\r\n    function verifySmartcardName(value:string) {\r\n        API(\r\n            'post',\r\n            'verifySmartcard',\r\n            { planId: plan.id, smartcardNumber:value },\r\n            onRetrieveSmarcardName,\r\n            onVerificationFail,\r\n            user.data && user.token,\r\n        );\r\n    }\r\n\r\n    function onRetrieveSmarcardName(data: any) {\r\n        setConfirmationLoading('none')\r\n        setSmartcardName(data.data.Customer_Name);\r\n    }\r\n\r\n     const [smartcardName, setSmartcardName] = useState('');\r\n    const [provider, setSelectedProvider] = useState({} as any);\r\n    const [plan, setSelectedPlan] = useState({} as any);\r\n    const providers = {\r\n        DSTV: { img: dstv, name: 'DSTV' },\r\n        GOTV: { img: gotv, name: 'GOTV' },\r\n        STARTIMES: { img: startimes, name: 'STARTIMES' },\r\n    };\r\n\r\n    function selectProvider(provider: any) {\r\n        setSelectedPlan({});\r\n        const objectValues = Object.values(providers);\r\n        objectValues.map((net) => {\r\n            if (net.name == provider) {\r\n                setSelectedProvider(net);\r\n            }\r\n        });\r\n    }\r\n\r\n    \r\n\r\n    if (notification) return <Notification message={notificationMessage} />;\r\n    else\r\n        return (\r\n            <div className=\"p-48-16 w-100\">\r\n                <PaymentCard\r\n                    onSubmit={onSubmit}\r\n                    paymentSelectorVisibility={paymentSelectorVisibility}\r\n                    setPaymentSelectorVisibility={setPaymentSelectorVisibility}\r\n                    amount={(plan.userPrice * plan.price) / 100}\r\n                />\r\n                <p className=\"text-p t-26\">Cable Purchase</p>\r\n\r\n                <p className=\"t-14\">Purchase your Cable TV Plans</p>\r\n\r\n                {user.data ? <WalletCardSI /> : <WalletCardNSI />}\r\n\r\n                <hr className=\"mt-0 mb-3 pt-0\"></hr>\r\n                <div className=\"bg-white p-4\">\r\n                    <form className=\" mb-3 text-start\">\r\n                        {errors.required && <span>This field is required</span>}\r\n                        {error && <Alert className=\"bg-danger text-white\">{error}</Alert>}\r\n                        <p className=\"t-16-14 pt-4 m-0 mb-1\">Select Provider</p>\r\n\r\n                        <Dropdown>\r\n                            <Dropdown.Toggle\r\n                                className=\"w-100 bg-white text-black form-input  align-items-center\"\r\n                                bsPrefix=\"p-0\"\r\n                                id=\"dropdown-basic\"\r\n                            >\r\n                                <div className=\"text-start  w-100 m-1  align-items-center \">\r\n                                    <img src={provider.img} width={40} />\r\n                                    <label className=\"mt-2 float-end  me-3 t-16 text-s \">\r\n                                        {provider.name}\r\n                                        <img className=\"  ms-3 me-2 \" src={profileDropdownImg} />\r\n                                    </label>\r\n                                </div>\r\n                            </Dropdown.Toggle>\r\n                            <Dropdown.Menu className=\"w-100 \">\r\n                                {Object.values(providers).map((provider, index) => {\r\n                                    return (\r\n                                        <Dropdown.Item\r\n                                            className=\"  align-items-center\"\r\n                                            onClick={() => selectProvider(provider.name)}\r\n                                            key={'selector' + index}\r\n                                        >\r\n                                            <div className=\"  align-items-center w-100 m-2 \">\r\n                                                <img src={provider.img} width={40} />\r\n                                                <label className=\" float-end mt-2 me-3 t-16 text-s\">\r\n                                                    {provider.name}\r\n                                                </label>\r\n                                            </div>\r\n                                        </Dropdown.Item>\r\n                                    );\r\n                                })}\r\n                            </Dropdown.Menu>\r\n                        </Dropdown>\r\n\r\n                        <p className=\"t-16-14 pt-4 m-0 mb-1\">Select Cable Plan</p>\r\n\r\n                        <Dropdown>\r\n                            <Dropdown.Toggle\r\n                                className=\"w-100 bg-white text-black form-input  align-items-center\"\r\n                                bsPrefix=\"p-0\"\r\n                                id=\"dropdown-basic\"\r\n                            >\r\n                                <Row className=\"    m-2 \">\r\n                                    <Col xs=\"8\" className=\"text-start\">\r\n                                        {plan.tarrifPlan}\r\n                                    </Col>\r\n                                    <Col xs=\"4\" className=\"text-end\">\r\n                                        {plan.userPrice && (\r\n                                            <label>₦{formatCurrency((plan.userPrice * plan.price) / 100)}</label>\r\n                                        )}\r\n                                    </Col>\r\n                                </Row>\r\n                            </Dropdown.Toggle>\r\n                            <Dropdown.Menu className=\"w-100 \">\r\n                                <Dropdown.Item className=\"  align-items-end\">\r\n                                    <Row className=\"    m-2 \">\r\n                                        <Col xs=\"8\">Plan</Col>\r\n                                        <Col xs=\"4\" className=\" text-end\">\r\n                                            Price\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Dropdown.Item>\r\n                                {provider.name &&\r\n                                    Object.values(appData.cablePlans[provider.name]).map((plan: any, index) => {\r\n                                        return (\r\n                                            <Dropdown.Item\r\n                                                className=\"  align-items-center\"\r\n                                                onClick={() => setSelectedPlan(plan)}\r\n                                                key={'selector' + index}\r\n                                            >\r\n                                                <Row className=\"    m-2 \">\r\n                                                    <Col xs=\"8\">{plan.tarrifPlan}</Col>\r\n                                                    <Col xs=\"4\" className=\" text-end\">\r\n                                                        ₦{formatCurrency((plan.userPrice * plan.price) / 100)}\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </Dropdown.Item>\r\n                                        );\r\n                                    })}\r\n                            </Dropdown.Menu>\r\n                        </Dropdown>\r\n\r\n                        <p className=\"t-16-14 pt-4 m-0 mb-1\">Smartcard Number</p>\r\n                        \r\n              <input\r\n                            className=\"form-input form-control  mt-1 mb-2\"\r\n                            {...register(\"smartcardNumber\", { required: true,minLength:8, \r\n                                pattern: {\r\n                                    value: /^[0-9]*$/,\r\n                                    message: \"invalid Smartcard Number\"\r\n                                  },\r\n                                  onChange: (e)=>{\r\n                                      var value=e.target.value.replace(/\\D/g, '')\r\n                                      setValue('smartcardNumber', value)\r\n                                      if(value.length>9){\r\n                                        verifySmartcardName(value);\r\n                                        setConfirmationLoading('inline')\r\n                                    }\r\n                                    }\r\n                                 })}\r\n                        />\r\n                        <label className=\"text-p text-underline\" >\r\n                        <img className=\"loader-icon\" src={loader} style={{ display: confirmationLoading }}/>\r\n                            {smartcardName && smartcardName}\r\n                        </label>\r\n\r\n                        <button\r\n                            className=\"form-control mt-4 button\"\r\n                            onClick={(e) => {\r\n                                e.preventDefault();\r\n                                setPaymentSelectorVisibility(true);\r\n                            }}\r\n                            disabled ={!smartcardName}\r\n                        >\r\n                            <label style={{ display: buttonClass }}>Proceed to Pay</label>\r\n                            <img className=\"loader-icon\" src={loader} style={{ display: loaderClass }} />\r\n                        </button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n};\r\n\r\nexport default Cable;\r\n"]},"metadata":{},"sourceType":"module"}