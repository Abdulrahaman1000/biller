{"ast":null,"code":"var _jsxFileName = \"C:\\\\All Projects\\\\billerr\\\\DataNowUserReact3\\\\src\\\\pages\\\\Electric\\\\Electric.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from 'react';\nimport WalletCardNSI from '../../components/WalletCardNSI';\nimport WalletCardSI from '../../components/WalletCardSI';\nimport { UserContext } from '../../Store/UserContext';\nimport { AppDataContext } from '../../Store/AppDataContext';\nimport API from '../../helpers/API';\nimport { useForm } from 'react-hook-form';\nimport { Alert, Col, Dropdown, Row } from 'react-bootstrap';\nimport loader from '../../images/loader.gif';\nimport aedc from '../../images/aedc.svg';\nimport ikedc from '../../images/ikedc.jpg';\nimport ekedc from '../../images/ekedc.jpg';\nimport phed from '../../images/phed.png';\nimport ibedc from '../../images/ibedc.svg';\nimport jed from '../../images/jed.svg';\nimport kaedco from '../../images/kaedco.svg';\nimport kedco from '../../images/kedco.svg';\nimport profileDropdownImg from '../../images/profileDropdownImg.svg';\nimport PaymentCard from '../../components/PaymentCard';\nimport Notification from '../../components/Notification';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Electric = () => {\n  _s();\n\n  const {\n    user,\n    userDispatch\n  } = useContext(UserContext);\n  const [paymentSelectorVisibility, setPaymentSelectorVisibility] = useState(false);\n  const {\n    appData,\n    dispatch\n  } = useContext(AppDataContext);\n  const [error, setError] = useState('');\n  const [notification, setNotification] = useState(false);\n  const [notificationMessage, setNotificationMessage] = useState('');\n  const [loaderClass, setLoaderClass] = useState('none');\n  const [buttonClass, setButtonClass] = useState('inline');\n  const [confirmationLoading, setConfirmationLoading] = useState('none');\n  const {\n    register,\n    setValue,\n    getValues,\n    formState: {\n      errors,\n      isDirty,\n      isValid\n    }\n  } = useForm({\n    mode: \"onChange\"\n  });\n\n  const onSubmit = paymentMethod => {\n    if (loaderClass === 'inline') return;\n    setError('');\n    setLoaderClass('inline');\n    setButtonClass('none');\n    API('post', 'electricPurchase', {\n      planId: plan.id,\n      ...paymentMethod,\n      ...getValues()\n    }, onSuccess, onFail, user.data && user.token);\n  };\n\n  function onSuccess(data) {\n    console.log(data);\n\n    if (data.data.payment_url) {\n      window.location = data.data.payment_url.data.link;\n    } else {\n      //if it wasn't an ATM transfer, display modal\n      setNotification(true);\n      setNotificationMessage(data.message);\n    }\n  }\n\n  function onFail(error) {\n    setError(error);\n    setLoaderClass('none');\n    setButtonClass('inline');\n  }\n\n  function onVerificationFail(error) {\n    setConfirmationLoading('none');\n    setMeterDetails('');\n  }\n\n  function verifyMeterNumber(value) {\n    API('post', 'verifyMeter', {\n      planId: plan.id,\n      meterNumber: value\n    }, onRetrieveMeterDetails, onVerificationFail, user.data && user.token);\n  }\n\n  function onRetrieveMeterDetails(data) {\n    setMeterDetails(data.data.Customer_Name);\n  }\n\n  const [meterDetails, setMeterDetails] = useState('');\n  const [disco, setSelectedDisco] = useState({});\n  const [plan, setSelectedPlan] = useState({});\n  const discos = {\n    IKEDC: {\n      img: ikedc,\n      discosName: 'IKEDC'\n    },\n    EKEDC: {\n      img: ekedc,\n      discosName: 'EKEDC'\n    },\n    KEDCO: {\n      img: kedco,\n      discosName: 'KEDCO'\n    },\n    PHED: {\n      img: phed,\n      discosName: 'PHED'\n    },\n    AEDC: {\n      img: aedc,\n      discosName: 'AEDC'\n    },\n    JED: {\n      img: jed,\n      discosName: 'JED'\n    },\n    IBEDC: {\n      img: ibedc,\n      discosName: 'IBEDC'\n    },\n    KAEDCO: {\n      img: kaedco,\n      discosName: 'KAEDCO'\n    }\n  };\n\n  function selectDisco(disco) {\n    setSelectedPlan({});\n    const objectValues = Object.values(discos);\n    objectValues.map(net => {\n      if (net.discosName == disco) {\n        setSelectedDisco(net);\n      }\n    });\n  }\n\n  if (notification) return /*#__PURE__*/_jsxDEV(Notification, {\n    message: notificationMessage\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 30\n  }, this);else return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-48-16 w-100\",\n    children: [/*#__PURE__*/_jsxDEV(PaymentCard, {\n      onSubmit: onSubmit,\n      paymentSelectorVisibility: paymentSelectorVisibility,\n      setPaymentSelectorVisibility: setPaymentSelectorVisibility,\n      amount: getValues('amount')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-p t-26\",\n      children: \"Electric Purchase\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"t-14\",\n      children: \"Purchase your electric\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 17\n    }, this), user.electric ? /*#__PURE__*/_jsxDEV(WalletCardSI, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 34\n    }, this) : /*#__PURE__*/_jsxDEV(WalletCardNSI, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 53\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n      className: \"mt-0 mb-3 pt-0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-4\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \" mb-3 text-start\",\n        children: [errors.required && /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"This field is required\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 45\n        }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n          className: \"bg-danger text-white\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 35\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"t-16-14 pt-4 m-0 mb-1\",\n          children: \"Select Disco\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n          children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n            className: \"w-100 bg-white text-black form-input  align-items-center\",\n            bsPrefix: \"p-0\",\n            id: \"dropdown-basic\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-start  w-100 m-1  align-items-center \",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: disco.img,\n                width: 40\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"mt-2 float-end  me-3 t-16 text-s \",\n                children: [disco.discosName, /*#__PURE__*/_jsxDEV(\"img\", {\n                  className: \"  ms-3 me-2 \",\n                  src: profileDropdownImg\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 160,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n            className: \"w-100 \",\n            children: Object.values(discos).map((disco, index) => {\n              return /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                className: \"  align-items-center\",\n                onClick: () => selectDisco(disco.discosName),\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"  align-items-center w-100 m-2 \",\n                  children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                    src: disco.img,\n                    width: 40\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 173,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \" float-end mt-2 me-3 t-16 text-s\",\n                    children: disco.discosName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 174,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 172,\n                  columnNumber: 45\n                }, this)\n              }, 'selector' + index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 41\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"t-16-14 pt-4 m-0 mb-1\",\n          children: \"Select Electric Plan\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n          children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n            className: \"w-100 bg-white text-black form-input  align-items-center\",\n            bsPrefix: \"p-0\",\n            id: \"dropdown-basic\",\n            children: /*#__PURE__*/_jsxDEV(Row, {\n              className: \"    m-2 \",\n              children: /*#__PURE__*/_jsxDEV(Col, {\n                xs: \"12\",\n                className: \"text-start\",\n                children: plan.packageType\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n            className: \"w-100 \",\n            children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n              className: \"  align-items-end\",\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                className: \"    m-2 \",\n                children: /*#__PURE__*/_jsxDEV(Col, {\n                  xs: \"8\",\n                  children: \"Plan\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 201,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 33\n            }, this), disco.discosName && Object.values(appData.electricPlans[disco.discosName]).map((plan, index) => {\n              return /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                className: \"  align-items-center\",\n                onClick: () => setSelectedPlan(plan),\n                children: /*#__PURE__*/_jsxDEV(Row, {\n                  className: \"    m-2 \",\n                  children: /*#__PURE__*/_jsxDEV(Col, {\n                    xs: \"8\",\n                    children: plan.packageType\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 216,\n                    columnNumber: 53\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 215,\n                  columnNumber: 49\n                }, this)\n              }, 'selector' + index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 45\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"t-16-14 pt-4 m-0 mb-1\",\n          children: \"Meter Number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-input form-control  mt-1 mb-2\",\n          ...register(\"meterNumber\", {\n            required: true,\n            minLength: 8,\n            pattern: {\n              value: /^[0-9]*$/,\n              message: \"invalid Meter Number\"\n            },\n            onChange: e => {\n              var value = e.target.value.replace(/\\D/g, '');\n              setValue('smartcardNumber', value);\n\n              if (value.length > 10) {\n                verifyMeterNumber(value);\n                setConfirmationLoading('inline');\n              }\n            }\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 30\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"text-p text-underline\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"loader-icon\",\n            src: loader,\n            style: {\n              display: confirmationLoading\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 25\n          }, this), meterDetails && meterDetails]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"t-16-14 pt-4 m-0 mb-1\",\n          children: \"Phone Number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-input form-control  mt-1 mb-2\",\n          ...register(\"phoneNumber\", {\n            required: true,\n            maxLength: 11,\n            minLength: 11,\n            pattern: {\n              value: /^[0-9]*$/,\n              message: \"invalid phone number\"\n            },\n            onChange: e => {\n              setValue('phoneNumber', e.target.value.replace(/\\D/g, ''));\n            }\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"t-16-14 pt-4 m-0 mb-1\",\n          children: \"Amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-input form-control  mt-1 mb-2\",\n          ...register(\"amount\", {\n            required: true,\n            minLength: 1,\n            pattern: {\n              value: /^[0-9]*$/,\n              message: \"invalid amount\"\n            },\n            onChange: e => {\n              setValue('amount', e.target.value.replace(/\\D/g, ''));\n            }\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"form-control mt-4 button\",\n          onClick: e => {\n            e.preventDefault();\n            setPaymentSelectorVisibility(true);\n          },\n          disabled: !isDirty || !isValid || !meterDetails,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              display: buttonClass\n            },\n            children: \"Proceed to Pay\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"loader-icon\",\n            src: loader,\n            style: {\n              display: loaderClass\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 13\n  }, this);\n};\n\n_s(Electric, \"KCvSNRBL8NgQpI32qf5BwnMYXa8=\", false, function () {\n  return [useForm];\n});\n\n_c = Electric;\nexport default Electric;\n\nvar _c;\n\n$RefreshReg$(_c, \"Electric\");","map":{"version":3,"sources":["C:/All Projects/billerr/DataNowUserReact3/src/pages/Electric/Electric.tsx"],"names":["React","useState","useContext","WalletCardNSI","WalletCardSI","UserContext","AppDataContext","API","useForm","Alert","Col","Dropdown","Row","loader","aedc","ikedc","ekedc","phed","ibedc","jed","kaedco","kedco","profileDropdownImg","PaymentCard","Notification","Electric","user","userDispatch","paymentSelectorVisibility","setPaymentSelectorVisibility","appData","dispatch","error","setError","notification","setNotification","notificationMessage","setNotificationMessage","loaderClass","setLoaderClass","buttonClass","setButtonClass","confirmationLoading","setConfirmationLoading","register","setValue","getValues","formState","errors","isDirty","isValid","mode","onSubmit","paymentMethod","planId","plan","id","onSuccess","onFail","data","token","console","log","payment_url","window","location","link","message","onVerificationFail","setMeterDetails","verifyMeterNumber","value","meterNumber","onRetrieveMeterDetails","Customer_Name","meterDetails","disco","setSelectedDisco","setSelectedPlan","discos","IKEDC","img","discosName","EKEDC","KEDCO","PHED","AEDC","JED","IBEDC","KAEDCO","selectDisco","objectValues","Object","values","map","net","electric","required","index","packageType","electricPlans","minLength","pattern","onChange","e","target","replace","length","display","maxLength","preventDefault"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\r\nimport WalletCardNSI from '../../components/WalletCardNSI';\r\nimport WalletCardSI from '../../components/WalletCardSI';\r\nimport { UserContext } from '../../Store/UserContext';\r\nimport { AppDataContext } from '../../Store/AppDataContext';\r\nimport API from '../../helpers/API';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useForm } from 'react-hook-form';\r\nimport { Alert, Col, Dropdown, Row } from 'react-bootstrap';\r\nimport loader from '../../images/loader.gif';\r\nimport aedc from '../../images/aedc.svg';\r\nimport ikedc from '../../images/ikedc.jpg';\r\nimport ekedc from '../../images/ekedc.jpg';\r\nimport phed from '../../images/phed.png';\r\nimport ibedc from '../../images/ibedc.svg';\r\nimport jed from '../../images/jed.svg';\r\nimport kaedco from '../../images/kaedco.svg';\r\nimport kedco from '../../images/kedco.svg';\r\nimport profileDropdownImg from '../../images/profileDropdownImg.svg';\r\nimport PaymentCard from '../../components/PaymentCard';\r\nimport Notification from '../../components/Notification';\r\n\r\nconst Electric = () => {\r\n    const { user, userDispatch } = useContext(UserContext);\r\n    const [paymentSelectorVisibility, setPaymentSelectorVisibility] = useState(false);\r\n    const { appData, dispatch } = useContext(AppDataContext);\r\n\r\n    const [error, setError] = useState('');\r\n    const [notification, setNotification] = useState(false);\r\n    const [notificationMessage, setNotificationMessage] = useState('');\r\n \r\n    const [loaderClass, setLoaderClass] = useState('none');\r\n    const [buttonClass, setButtonClass] = useState('inline');\r\n    const [confirmationLoading, setConfirmationLoading] = useState('none');\r\n\r\n    const {\r\n        register,\r\n        setValue,\r\n         getValues,\r\n        formState: { errors ,isDirty,isValid},\r\n    } = useForm({ mode: \"onChange\" });\r\n\r\n\r\n    const onSubmit = (paymentMethod: any) => {\r\n        if (loaderClass === 'inline') return;\r\n\r\n        setError('');\r\n        setLoaderClass('inline');\r\n        setButtonClass('none');\r\n\r\n        API(\r\n            'post',\r\n            'electricPurchase',\r\n            { planId: plan.id, ...paymentMethod,  ...getValues() },\r\n            onSuccess,\r\n            onFail,\r\n            user.data && user.token,\r\n        );\r\n    };\r\n\r\n    function onSuccess(data: any) {\r\n        console.log(data);\r\n        if (data.data.payment_url) {\r\n            window.location = data.data.payment_url.data.link;\r\n        } else {\r\n            //if it wasn't an ATM transfer, display modal\r\n            setNotification(true);\r\n            setNotificationMessage(data.message);\r\n        }\r\n    }\r\n\r\n    function onFail(error: string) {\r\n        setError(error);\r\n        setLoaderClass('none');\r\n        setButtonClass('inline');\r\n    }\r\n\r\n\r\n    function onVerificationFail(error:string){\r\n        setConfirmationLoading('none')\r\n        setMeterDetails('');\r\n    }\r\n\r\n\r\n    function verifyMeterNumber(value:string) {\r\n        API(\r\n            'post',\r\n            'verifyMeter',\r\n            { planId: plan.id, meterNumber:value },\r\n            onRetrieveMeterDetails,\r\n            onVerificationFail,\r\n            user.data && user.token,\r\n        );\r\n    }\r\n\r\n    function onRetrieveMeterDetails(data: any) {\r\n        setMeterDetails(data.data.Customer_Name);\r\n    }\r\n\r\n    const [meterDetails, setMeterDetails] = useState('');\r\n     const [disco, setSelectedDisco] = useState({} as any);\r\n    const [plan, setSelectedPlan] = useState({} as any);\r\n    const discos = {\r\n        IKEDC: { img: ikedc, discosName: 'IKEDC' },\r\n        EKEDC: { img: ekedc, discosName: 'EKEDC' },\r\n        KEDCO: { img: kedco, discosName: 'KEDCO' },\r\n        PHED: { img: phed, discosName: 'PHED' },\r\n        AEDC: { img: aedc, discosName: 'AEDC' },\r\n        JED: { img: jed, discosName: 'JED' },\r\n        IBEDC: { img: ibedc, discosName: 'IBEDC' },\r\n        KAEDCO: { img: kaedco, discosName: 'KAEDCO' },\r\n    };\r\n\r\n    function selectDisco(disco: any) {\r\n        setSelectedPlan({});\r\n        const objectValues = Object.values(discos);\r\n        objectValues.map((net) => {\r\n            if (net.discosName == disco) {\r\n                setSelectedDisco(net);\r\n            }\r\n        });\r\n    }\r\n\r\n    \r\n\r\n\r\n    if (notification) return <Notification message={notificationMessage} />;\r\n    else\r\n        return (\r\n            <div className=\"p-48-16 w-100\">\r\n                <PaymentCard\r\n                    onSubmit={onSubmit}\r\n                    paymentSelectorVisibility={paymentSelectorVisibility}\r\n                    setPaymentSelectorVisibility={setPaymentSelectorVisibility}\r\n                    amount={getValues('amount')}\r\n                />\r\n                <p className=\"text-p t-26\">Electric Purchase</p>\r\n\r\n                <p className=\"t-14\">Purchase your electric</p>\r\n\r\n                {user.electric ? <WalletCardSI /> : <WalletCardNSI />}\r\n\r\n                <hr className=\"mt-0 mb-3 pt-0\"></hr>\r\n                <div className=\"bg-white p-4\">\r\n                    <form className=\" mb-3 text-start\">\r\n                        {errors.required && <span>This field is required</span>}\r\n                        {error && <Alert className=\"bg-danger text-white\">{error}</Alert>}\r\n                        <p className=\"t-16-14 pt-4 m-0 mb-1\">Select Disco</p>\r\n\r\n                        <Dropdown>\r\n                            <Dropdown.Toggle\r\n                                className=\"w-100 bg-white text-black form-input  align-items-center\"\r\n                                bsPrefix=\"p-0\"\r\n                                id=\"dropdown-basic\"\r\n                            >\r\n                                <div className=\"text-start  w-100 m-1  align-items-center \">\r\n                                    <img src={disco.img} width={40} />\r\n                                    <label className=\"mt-2 float-end  me-3 t-16 text-s \">\r\n                                        {disco.discosName}\r\n                                        <img className=\"  ms-3 me-2 \" src={profileDropdownImg} />\r\n                                    </label>\r\n                                </div>\r\n                            </Dropdown.Toggle>\r\n                            <Dropdown.Menu className=\"w-100 \">\r\n                                {Object.values(discos).map((disco, index) => {\r\n                                    return (\r\n                                        <Dropdown.Item\r\n                                            className=\"  align-items-center\"\r\n                                            onClick={() => selectDisco(disco.discosName)}\r\n                                            key={'selector' + index}\r\n                                        >\r\n                                            <div className=\"  align-items-center w-100 m-2 \">\r\n                                                <img src={disco.img} width={40} />\r\n                                                <label className=\" float-end mt-2 me-3 t-16 text-s\">\r\n                                                    {disco.discosName}\r\n                                                </label>\r\n                                            </div>\r\n                                        </Dropdown.Item>\r\n                                    );\r\n                                })}\r\n                            </Dropdown.Menu>\r\n                        </Dropdown>\r\n\r\n                        <p className=\"t-16-14 pt-4 m-0 mb-1\">Select Electric Plan</p>\r\n\r\n                        <Dropdown>\r\n                            <Dropdown.Toggle\r\n                                className=\"w-100 bg-white text-black form-input  align-items-center\"\r\n                                bsPrefix=\"p-0\"\r\n                                id=\"dropdown-basic\"\r\n                            >\r\n                                <Row className=\"    m-2 \">\r\n                                    <Col xs=\"12\" className=\"text-start\">\r\n                                        {plan.packageType}\r\n                                    </Col>\r\n                                </Row>\r\n                            </Dropdown.Toggle>\r\n                            <Dropdown.Menu className=\"w-100 \">\r\n                                <Dropdown.Item className=\"  align-items-end\">\r\n                                    <Row className=\"    m-2 \">\r\n                                        <Col xs=\"8\">Plan</Col>\r\n                                        {/* <Col xs=\"4\" className=\" text-end\">\r\n                                        Price\r\n                                    </Col> */}\r\n                                    </Row>\r\n                                </Dropdown.Item>\r\n                                {disco.discosName &&\r\n                                    Object.values(appData.electricPlans[disco.discosName]).map((plan: any, index) => {\r\n                                        return (\r\n                                            <Dropdown.Item\r\n                                                className=\"  align-items-center\"\r\n                                                onClick={() => setSelectedPlan(plan)}\r\n                                                key={'selector' + index}\r\n                                            >\r\n                                                <Row className=\"    m-2 \">\r\n                                                    <Col xs=\"8\">{plan.packageType}</Col>\r\n                                                    {/* <Col xs=\"4\" className=\" text-end\">\r\n                                                    {plan.userPrice}\r\n                                                </Col> */}\r\n                                                </Row>\r\n                                            </Dropdown.Item>\r\n                                        );\r\n                                    })}\r\n                            </Dropdown.Menu>\r\n                        </Dropdown>\r\n\r\n                        <p className=\"t-16-14 pt-4 m-0 mb-1\">Meter Number</p>\r\n                        {/* <input className=\"text-input form-control  mt-1 mb-2\" {...register('email')} /> */}\r\n                             <input\r\n                            className=\"form-input form-control  mt-1 mb-2\"\r\n                            {...register(\"meterNumber\", { required: true,minLength:8, \r\n                                pattern: {\r\n                                    value: /^[0-9]*$/,\r\n                                    message: \"invalid Meter Number\"\r\n                                  },\r\n                                  onChange: (e)=>{\r\n                                      var value=e.target.value.replace(/\\D/g, '')\r\n                                      setValue('smartcardNumber', value)\r\n                                      if(value.length>10){\r\n                                        verifyMeterNumber(value);\r\n                                        setConfirmationLoading('inline')\r\n                                    }\r\n                                    }\r\n                                 })}\r\n                        />\r\n                            \r\n                        <label className=\"text-p text-underline\" >\r\n                        <img className=\"loader-icon\" src={loader} style={{ display: confirmationLoading }}/>\r\n                              {meterDetails &&  meterDetails}\r\n                        </label>\r\n\r\n                        <p className=\"t-16-14 pt-4 m-0 mb-1\">Phone Number</p>\r\n                         <input\r\n                            className=\"form-input form-control  mt-1 mb-2\"\r\n                            {...register(\"phoneNumber\", { required: true, maxLength: 11, minLength:11, \r\n                                pattern: {\r\n                                    value: /^[0-9]*$/,\r\n                                    message: \"invalid phone number\"\r\n                                  },\r\n                                  onChange: (e)=>{setValue('phoneNumber',e.target.value.replace(/\\D/g, ''))}\r\n                                 })}\r\n                        />\r\n\r\n                        <p className=\"t-16-14 pt-4 m-0 mb-1\">Amount</p>\r\n                         <input\r\n                            className=\"form-input form-control  mt-1 mb-2\"\r\n                            {...register(\"amount\", { required: true,minLength:1, \r\n                                pattern: {\r\n                                    value: /^[0-9]*$/,\r\n                                    message: \"invalid amount\"\r\n                                  },\r\n                                  onChange: (e)=>{setValue('amount',e.target.value.replace(/\\D/g, ''))}\r\n                                 })}\r\n                        />\r\n\r\n                        <button\r\n                            className=\"form-control mt-4 button\"\r\n                            onClick={(e) => {\r\n                                e.preventDefault();\r\n                                setPaymentSelectorVisibility(true);\r\n                            }}\r\n                            disabled ={!isDirty || !isValid ||!meterDetails}\r\n\r\n                        >\r\n                            <label style={{ display: buttonClass }}>Proceed to Pay</label>\r\n                            <img className=\"loader-icon\" src={loader} style={{ display: loaderClass }} />\r\n                        </button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n};\r\n\r\nexport default Electric;\r\n"]},"metadata":{},"sourceType":"module"}