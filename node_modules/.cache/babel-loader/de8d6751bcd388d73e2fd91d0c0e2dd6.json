{"ast":null,"code":"var _jsxFileName = \"C:\\\\All Projects\\\\billerr\\\\DataNowUserReact3\\\\src\\\\pages\\\\Airtime\\\\Airtime.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from 'react';\nimport WalletCardNSI from '../../components/WalletCardNSI';\nimport WalletCardSI from '../../components/WalletCardSI';\nimport { UserContext } from '../../Store/UserContext';\nimport API from '../../helpers/API';\nimport { useForm } from 'react-hook-form';\nimport { Alert, Dropdown } from 'react-bootstrap';\nimport loader from '../../images/loader.gif';\nimport mtn from '../../images/mtn.svg';\nimport glo from '../../images/glo.svg';\nimport airtel from '../../images/airtel.svg';\nimport etisalat from '../../images/etisalat.svg';\nimport profileDropdownImg from '../../images/profileDropdownImg.svg';\nimport PaymentCard from '../../components/PaymentCard';\nimport Notification from '../../components/Notification';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Dashboard = () => {\n  _s();\n\n  const {\n    user,\n    userDispatch\n  } = useContext(UserContext);\n  const [paymentSelectorVisibility, setPaymentSelectorVisibility] = useState(false);\n  const [error, setError] = useState('');\n  const [notification, setNotification] = useState(false);\n  const [notificationMessage, setNotificationMessage] = useState('');\n  const [loaderClass, setLoaderClass] = useState('none');\n  const [buttonClass, setButtonClass] = useState('inline');\n  const {\n    register,\n    setValue,\n    getValues,\n    formState: {\n      errors,\n      isDirty,\n      isValid\n    }\n  } = useForm({\n    mode: \"onChange\"\n  });\n\n  const onSubmit = paymentMethod => {\n    if (loaderClass === 'inline') return;\n    setError('');\n    setLoaderClass('inline');\n    setButtonClass('none');\n    API('post', 'airtimePurchase', {\n      network: network.name,\n      ...paymentMethod,\n      ...getValues()\n    }, onSuccess, onFail, user.data && user.token);\n  };\n\n  function onSuccess(data) {\n    console.log(data);\n\n    if (data.data.payment_url) {\n      window.location = data.data.payment_url.data.link;\n    } else {\n      //if it wasn't an ATM transfer, display modal\n      setNotification(true);\n      setNotificationMessage(data.message);\n    }\n  }\n\n  function onFail(error) {\n    setError(error);\n    setLoaderClass('none');\n    setButtonClass('inline');\n  }\n\n  const [network, setSelectedNetwork] = useState({});\n  const networks = {\n    MTN: {\n      img: mtn,\n      name: 'MTN'\n    },\n    GLO: {\n      img: glo,\n      name: 'GLO'\n    },\n    AIRTEL: {\n      img: airtel,\n      name: 'AIRTEL'\n    },\n    ETISALAT: {\n      img: etisalat,\n      name: '9Mobile'\n    }\n  };\n\n  function selectNetwork(network) {\n    const objectValues = Object.values(networks);\n    objectValues.map(net => {\n      if (net.name == network) {\n        setSelectedNetwork(net);\n      }\n    });\n  }\n\n  if (notification) return /*#__PURE__*/_jsxDEV(Notification, {\n    message: notificationMessage\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 30\n  }, this);else return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-48-16 w-100\",\n    children: [/*#__PURE__*/_jsxDEV(PaymentCard, {\n      onSubmit: onSubmit,\n      paymentSelectorVisibility: paymentSelectorVisibility,\n      setPaymentSelectorVisibility: setPaymentSelectorVisibility,\n      amount: getValues('amount')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-p t-26\",\n      children: \"Airtime Purchase\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"t-14\",\n      children: \"Purchase your airtime\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }, this), user.data ? /*#__PURE__*/_jsxDEV(WalletCardSI, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 30\n    }, this) : /*#__PURE__*/_jsxDEV(WalletCardNSI, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 49\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n      className: \"mt-0 mb-3 pt-0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-4\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \" mb-3 text-start\",\n        children: [errors.required && /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"This field is required\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 45\n        }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n          className: \"bg-danger text-white\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 35\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"t-16-14 pt-4 m-0 mb-1\",\n          children: \"Select Network\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n          children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n            className: \"w-100 bg-white text-black form-input  align-items-center\",\n            bsPrefix: \"p-0\",\n            id: \"dropdown-basic\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-start  w-100 m-1  align-items-center \",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: network.img,\n                width: 40\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"mt-2 float-end  me-3 t-16 text-s \",\n                children: [network.name, /*#__PURE__*/_jsxDEV(\"img\", {\n                  className: \"  ms-3 me-2 \",\n                  src: profileDropdownImg\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 119,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n            className: \"w-100 \",\n            children: Object.values(networks).map((network, index) => {\n              return /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                className: \"  align-items-center\",\n                onClick: () => selectNetwork(network.name),\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"  align-items-center w-100 m-2 \",\n                  children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                    src: network.img,\n                    width: 40\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 132,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \" float-end mt-2 me-3 t-16 text-s\",\n                    children: network.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 133,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 131,\n                  columnNumber: 45\n                }, this)\n              }, 'selector' + index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 41\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"t-16-14 pt-4 m-0 mb-1\",\n          children: \"Phone Number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-input form-control  mt-1 mb-2\",\n          ...register(\"phoneNumber\", {\n            required: true,\n            maxLength: 11,\n            minLength: 11,\n            pattern: {\n              value: /^[0-9]*$/,\n              message: \"invalid phone number\"\n            },\n            onChange: e => {\n              setValue('phoneNumber', e.target.value.replace(/\\D/g, ''));\n            }\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"t-16-14 pt-4 m-0 mb-1\",\n          children: \"Amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-input form-control  mt-1 mb-2\",\n          ...register(\"amount\", {\n            required: true,\n            minLength: 1,\n            pattern: {\n              value: /^[0-9]*$/,\n              message: \"invalid amount\"\n            },\n            onChange: e => {\n              setValue('amount', e.target.value.replace(/\\D/g, ''));\n            }\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"form-control mt-4 button\",\n          onClick: e => {\n            e.preventDefault();\n            setPaymentSelectorVisibility(true);\n          },\n          disabled: !isDirty || !isValid || !network.name // here\n          ,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              display: buttonClass\n            },\n            children: \"Proceed to Pay\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"loader-icon\",\n            src: loader,\n            style: {\n              display: loaderClass\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 13\n  }, this);\n};\n\n_s(Dashboard, \"Mr1VKqSelxavKzMqxXPDYIvcLbc=\", false, function () {\n  return [useForm];\n});\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["C:/All Projects/billerr/DataNowUserReact3/src/pages/Airtime/Airtime.tsx"],"names":["React","useState","useContext","WalletCardNSI","WalletCardSI","UserContext","API","useForm","Alert","Dropdown","loader","mtn","glo","airtel","etisalat","profileDropdownImg","PaymentCard","Notification","Dashboard","user","userDispatch","paymentSelectorVisibility","setPaymentSelectorVisibility","error","setError","notification","setNotification","notificationMessage","setNotificationMessage","loaderClass","setLoaderClass","buttonClass","setButtonClass","register","setValue","getValues","formState","errors","isDirty","isValid","mode","onSubmit","paymentMethod","network","name","onSuccess","onFail","data","token","console","log","payment_url","window","location","link","message","setSelectedNetwork","networks","MTN","img","GLO","AIRTEL","ETISALAT","selectNetwork","objectValues","Object","values","map","net","required","index","maxLength","minLength","pattern","value","onChange","e","target","replace","preventDefault","display"],"mappings":"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","sourcesContent":["import React, { useState, useContext ,useEffect} from 'react';\r\nimport WalletCardNSI from '../../components/WalletCardNSI';\r\nimport WalletCardSI from '../../components/WalletCardSI';\r\nimport { UserContext } from '../../Store/UserContext';\r\nimport API from '../../helpers/API';\r\nimport { useForm } from 'react-hook-form';\r\nimport { Alert, Dropdown } from 'react-bootstrap';\r\nimport loader from '../../images/loader.gif';\r\nimport mtn from '../../images/mtn.svg';\r\nimport glo from '../../images/glo.svg';\r\nimport airtel from '../../images/airtel.svg';\r\nimport etisalat from '../../images/etisalat.svg';\r\nimport profileDropdownImg from '../../images/profileDropdownImg.svg';\r\nimport PaymentCard from '../../components/PaymentCard';\r\nimport Notification from '../../components/Notification';\r\n \r\nconst Dashboard = () => {\r\n    const { user, userDispatch } = useContext(UserContext);\r\n    const [paymentSelectorVisibility, setPaymentSelectorVisibility] = useState(false);\r\n\r\n    const [error, setError] = useState('');\r\n    const [notification, setNotification] = useState(false);\r\n    const [notificationMessage, setNotificationMessage] = useState('');\r\n\r\n    const [loaderClass, setLoaderClass] = useState('none');\r\n    const [buttonClass, setButtonClass] = useState('inline');\r\n\r\n    const {\r\n        register,\r\n        setValue,\r\n         getValues,\r\n        formState: { errors ,isDirty,isValid},\r\n    } = useForm({ mode: \"onChange\" });\r\n\r\n    const onSubmit = (paymentMethod: any) => {\r\n        if (loaderClass === 'inline') return;\r\n        setError('');\r\n        setLoaderClass('inline');\r\n        setButtonClass('none');\r\n\r\n        API(\r\n            'post',\r\n            'airtimePurchase',\r\n            { network: network.name, ...paymentMethod, ...getValues() },\r\n             onSuccess,\r\n            onFail,\r\n            user.data && user.token,\r\n        );\r\n    };\r\n\r\n    function onSuccess(data: any) {\r\n        console.log(data);\r\n        if (data.data.payment_url) {\r\n            window.location = data.data.payment_url.data.link;\r\n        } else {\r\n            //if it wasn't an ATM transfer, display modal\r\n            setNotification(true);\r\n            setNotificationMessage(data.message);\r\n        }\r\n    }\r\n\r\n    function onFail(error: string) {\r\n        setError(error);\r\n        setLoaderClass('none');\r\n        setButtonClass('inline');\r\n    }\r\n    const [network, setSelectedNetwork] = useState({} as any);\r\n    const networks = {\r\n        MTN: { img: mtn, name: 'MTN' },\r\n        GLO: { img: glo, name: 'GLO' },\r\n        AIRTEL: { img: airtel, name: 'AIRTEL' },\r\n        ETISALAT: { img: etisalat, name: '9Mobile' },\r\n    };\r\n\r\n    function selectNetwork(network: any) {\r\n        const objectValues = Object.values(networks);\r\n        objectValues.map((net) => {\r\n            if (net.name == network) {\r\n                setSelectedNetwork(net);\r\n            }\r\n        });\r\n    }\r\n\r\n     \r\n\r\n    if (notification) return <Notification message={notificationMessage} />;\r\n    else\r\n        return (\r\n            <div className=\"p-48-16 w-100\">\r\n                <PaymentCard\r\n                    onSubmit={onSubmit}\r\n                    paymentSelectorVisibility={paymentSelectorVisibility}\r\n                    setPaymentSelectorVisibility={setPaymentSelectorVisibility}\r\n                    amount={getValues('amount')}\r\n                />\r\n                <p className=\"text-p t-26\">Airtime Purchase</p>\r\n\r\n                <p className=\"t-14\">Purchase your airtime</p>\r\n\r\n                {user.data ? <WalletCardSI /> : <WalletCardNSI />}\r\n\r\n                <hr className=\"mt-0 mb-3 pt-0\"></hr>\r\n                <div className=\"bg-white p-4\">\r\n                    <form className=\" mb-3 text-start\">\r\n                        {errors.required && <span>This field is required</span>}\r\n                        {error && <Alert className=\"bg-danger text-white\">{error}</Alert>}\r\n                        <p className=\"t-16-14 pt-4 m-0 mb-1\">Select Network</p>\r\n\r\n                        <Dropdown>\r\n                            <Dropdown.Toggle\r\n                                className=\"w-100 bg-white text-black form-input  align-items-center\"\r\n                                bsPrefix=\"p-0\"\r\n                                id=\"dropdown-basic\"\r\n                            >\r\n                                <div className=\"text-start  w-100 m-1  align-items-center \">\r\n                                    <img src={network.img} width={40} />\r\n                                    <label className=\"mt-2 float-end  me-3 t-16 text-s \">\r\n                                        {network.name}\r\n                                        <img className=\"  ms-3 me-2 \" src={profileDropdownImg} />\r\n                                    </label>\r\n                                </div>\r\n                            </Dropdown.Toggle>\r\n                            <Dropdown.Menu className=\"w-100 \">\r\n                                {Object.values(networks).map((network, index) => {\r\n                                    return (\r\n                                        <Dropdown.Item\r\n                                            className=\"  align-items-center\"\r\n                                            onClick={() => selectNetwork(network.name)}\r\n                                            key={'selector' + index}\r\n                                        >\r\n                                            <div className=\"  align-items-center w-100 m-2 \">\r\n                                                <img src={network.img} width={40} />\r\n                                                <label className=\" float-end mt-2 me-3 t-16 text-s\">\r\n                                                    {network.name}\r\n                                                </label>\r\n                                            </div>\r\n                                        </Dropdown.Item>\r\n                                    );\r\n                                })}\r\n                            </Dropdown.Menu>\r\n                        </Dropdown>\r\n\r\n                        <p className=\"t-16-14 pt-4 m-0 mb-1\">Phone Number</p>\r\n                         <input\r\n                            className=\"form-input form-control  mt-1 mb-2\"\r\n                            {...register(\"phoneNumber\", { required: true, maxLength: 11, minLength:11, \r\n                                pattern: {\r\n                                    value: /^[0-9]*$/,\r\n                                    message: \"invalid phone number\"\r\n                                  },\r\n                                  onChange: (e)=>{setValue('phoneNumber',e.target.value.replace(/\\D/g, ''))}\r\n                                 })}\r\n                        />\r\n \r\n                        <p className=\"t-16-14 pt-4 m-0 mb-1\">Amount</p> \r\n                         <input\r\n                            className=\"form-input form-control  mt-1 mb-2\"\r\n                            {...register(\"amount\", { required: true,minLength:1, \r\n                                pattern: {\r\n                                    value: /^[0-9]*$/,\r\n                                    message: \"invalid amount\"\r\n                                  },\r\n                                  onChange: (e)=>{setValue('amount',e.target.value.replace(/\\D/g, ''))}\r\n                                 })}\r\n                        />\r\n\r\n                        <button\r\n                            className=\"form-control mt-4 button\"\r\n                            onClick={(e) => {\r\n                                e.preventDefault();\r\n                                setPaymentSelectorVisibility(true);\r\n                            }}\r\n                            disabled={!isDirty || !isValid || !network.name} // here\r\n                        >\r\n                            <label style={{ display: buttonClass }}>Proceed to Pay</label>\r\n                            <img className=\"loader-icon\" src={loader} style={{ display: loaderClass }} />\r\n                        </button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n};\r\n\r\nexport default Dashboard;\r\n"]},"metadata":{},"sourceType":"module"}