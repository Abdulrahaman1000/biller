{"ast":null,"code":"import axios from \"axios\";\nimport { getOS } from \"./utils\";\n\nconst API = (method, url, data, callback, failback, token) => {\n  // const api = \"http://127.0.0.1:8000/api/user/\";\n  // const api = 'http://159.223.1.96/api/user/';\n  const api = \"https://api.datanow.ng/api/user/882285/\"; // const api = 'https://api.billerdev.ng/api/user/';\n\n  let parameter = \"\";\n\n  if (method === \"get\") {\n    parameter += \"?\";\n\n    for (const key in data) {\n      parameter += \"&\" + key + \"=\" + data[key];\n    }\n  }\n\n  axios({\n    method: method,\n    url: api + url + parameter,\n    timeout: 60000,\n    // 60 seconds timeout\n    data: method === \"get\" ? {} : {\n      source: getOS(),\n      ...data\n    },\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json;charset=UTF-8\",\n      Authorization: \"Bearer \" + (token ? token : \"\")\n    }\n  }).then(response => {\n    console.log(response);\n    const data = response.data;\n\n    if (response.status === 200) {\n      callback(data);\n    } else if (data.errors) {\n      let errorString = \"\";\n      const objectValues = Object.values(data.errors);\n      objectValues.map(error => {\n        errorString = errorString + error + \", \";\n      });\n      failback(errorString);\n    } else {\n      failback(data.message);\n    }\n  }).catch(error => {\n    console.log(error);\n\n    if (error.response) {\n      if (error.response.status === 401) {\n        // const history = useNavigate();\n        // history('/signin');\n        localStorage.setItem(\"user\", \"[]\");\n        window.location.assign(\"/signin\");\n      } // console.log('error', error.response.data);\n\n\n      let errorString = \"\";\n      const objectValues = Object.values(error.response.data);\n      objectValues.map(error => {\n        errorString = errorString + error + \", \";\n      });\n      failback(errorString);\n    }\n  });\n};\n\n_c = API;\nexport default API;\n\nvar _c;\n\n$RefreshReg$(_c, \"API\");","map":{"version":3,"sources":["C:/All Projects/billerr/DataNowUserReact3/src/helpers/API.tsx"],"names":["axios","getOS","API","method","url","data","callback","failback","token","api","parameter","key","timeout","source","headers","Accept","Authorization","then","response","console","log","status","errors","errorString","objectValues","Object","values","map","error","message","catch","localStorage","setItem","window","location","assign"],"mappings":"AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,SAAtB;;AAGA,MAAMC,GAAG,GAAG,CACVC,MADU,EAEVC,GAFU,EAGVC,IAHU,EAIVC,QAJU,EAKVC,QALU,EAMVC,KANU,KAOP;AACH;AACA;AACA,QAAMC,GAAG,GAAG,yCAAZ,CAHG,CAIH;;AACA,MAAIC,SAAS,GAAG,EAAhB;;AACA,MAAIP,MAAM,KAAK,KAAf,EAAsB;AACpBO,IAAAA,SAAS,IAAI,GAAb;;AACA,SAAK,MAAMC,GAAX,IAAkBN,IAAlB,EAAwB;AACtBK,MAAAA,SAAS,IAAI,MAAMC,GAAN,GAAY,GAAZ,GAAkBN,IAAI,CAACM,GAAD,CAAnC;AACD;AACF;;AACDX,EAAAA,KAAK,CAAC;AACJG,IAAAA,MAAM,EAAEA,MADJ;AAEJC,IAAAA,GAAG,EAAEK,GAAG,GAAGL,GAAN,GAAYM,SAFb;AAGJE,IAAAA,OAAO,EAAE,KAHL;AAGY;AAChBP,IAAAA,IAAI,EAAEF,MAAM,KAAK,KAAX,GAAmB,EAAnB,GAAwB;AAAEU,MAAAA,MAAM,EAAEZ,KAAK,EAAf;AAAmB,SAAGI;AAAtB,KAJ1B;AAKJS,IAAAA,OAAO,EAAE;AACPC,MAAAA,MAAM,EAAE,kBADD;AAEP,sBAAgB,gCAFT;AAGPC,MAAAA,aAAa,EAAE,aAAaR,KAAK,GAAGA,KAAH,GAAW,EAA7B;AAHR;AALL,GAAD,CAAL,CAWGS,IAXH,CAWSC,QAAD,IAAc;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,UAAMb,IAAI,GAAGa,QAAQ,CAACb,IAAtB;;AACA,QAAIa,QAAQ,CAACG,MAAT,KAAoB,GAAxB,EAA6B;AAC3Bf,MAAAA,QAAQ,CAACD,IAAD,CAAR;AACD,KAFD,MAEO,IAAIA,IAAI,CAACiB,MAAT,EAAiB;AACtB,UAAIC,WAAW,GAAG,EAAlB;AACA,YAAMC,YAAY,GAAGC,MAAM,CAACC,MAAP,CAAcrB,IAAI,CAACiB,MAAnB,CAArB;AACAE,MAAAA,YAAY,CAACG,GAAb,CAAkBC,KAAD,IAAW;AAC1BL,QAAAA,WAAW,GAAGA,WAAW,GAAGK,KAAd,GAAsB,IAApC;AACD,OAFD;AAGArB,MAAAA,QAAQ,CAACgB,WAAD,CAAR;AACD,KAPM,MAOA;AACLhB,MAAAA,QAAQ,CAACF,IAAI,CAACwB,OAAN,CAAR;AACD;AACF,GA1BH,EA2BGC,KA3BH,CA2BUF,KAAD,IAAW;AAChBT,IAAAA,OAAO,CAACC,GAAR,CAAYQ,KAAZ;;AAEA,QAAIA,KAAK,CAACV,QAAV,EAAoB;AAClB,UAAIU,KAAK,CAACV,QAAN,CAAeG,MAAf,KAA0B,GAA9B,EAAmC;AACjC;AACA;AACAU,QAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6B,IAA7B;AACAC,QAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CAAuB,SAAvB;AACD,OANiB,CAOlB;;;AACA,UAAIZ,WAAW,GAAG,EAAlB;AACA,YAAMC,YAAY,GAAGC,MAAM,CAACC,MAAP,CAAcE,KAAK,CAACV,QAAN,CAAeb,IAA7B,CAArB;AACAmB,MAAAA,YAAY,CAACG,GAAb,CAAkBC,KAAD,IAAW;AAC1BL,QAAAA,WAAW,GAAGA,WAAW,GAAGK,KAAd,GAAsB,IAApC;AACD,OAFD;AAGArB,MAAAA,QAAQ,CAACgB,WAAD,CAAR;AACD;AACF,GA7CH;AA8CD,CAjED;;KAAMrB,G;AAmEN,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport { getOS } from \"./utils\";\r\nimport { userInfo } from \"os\";\r\n\r\nconst API = (\r\n  method: any,\r\n  url: any,\r\n  data: any,\r\n  callback: any,\r\n  failback: any,\r\n  token: any\r\n) => {\r\n  // const api = \"http://127.0.0.1:8000/api/user/\";\r\n  // const api = 'http://159.223.1.96/api/user/';\r\n  const api = \"https://api.datanow.ng/api/user/882285/\";\r\n  // const api = 'https://api.billerdev.ng/api/user/';\r\n  let parameter = \"\";\r\n  if (method === \"get\") {\r\n    parameter += \"?\";\r\n    for (const key in data) {\r\n      parameter += \"&\" + key + \"=\" + data[key];\r\n    }\r\n  }\r\n  axios({\r\n    method: method,\r\n    url: api + url + parameter,\r\n    timeout: 60000, // 60 seconds timeout\r\n    data: method === \"get\" ? {} : { source: getOS(), ...data },\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      Authorization: \"Bearer \" + (token ? token : \"\"),\r\n    },\r\n  })\r\n    .then((response) => {\r\n      console.log(response);\r\n      const data = response.data;\r\n      if (response.status === 200) {\r\n        callback(data);\r\n      } else if (data.errors) {\r\n        let errorString = \"\";\r\n        const objectValues = Object.values(data.errors);\r\n        objectValues.map((error) => {\r\n          errorString = errorString + error + \", \";\r\n        });\r\n        failback(errorString);\r\n      } else {\r\n        failback(data.message);\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n\r\n      if (error.response) {\r\n        if (error.response.status === 401) {\r\n          // const history = useNavigate();\r\n          // history('/signin');\r\n          localStorage.setItem(\"user\", \"[]\");\r\n          window.location.assign(\"/signin\");\r\n        }\r\n        // console.log('error', error.response.data);\r\n        let errorString = \"\";\r\n        const objectValues = Object.values(error.response.data);\r\n        objectValues.map((error) => {\r\n          errorString = errorString + error + \", \";\r\n        });\r\n        failback(errorString);\r\n      }\r\n    });\r\n};\r\n\r\nexport default API;\r\n"]},"metadata":{},"sourceType":"module"}