{"ast":null,"code":"var _jsxFileName = \"C:\\\\All Projects\\\\billerr\\\\DataNowUserReact3\\\\src\\\\pages\\\\Data\\\\Data.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from \"react\";\nimport WalletCardNSI from \"../../components/WalletCardNSI\";\nimport WalletCardSI from \"../../components/WalletCardSI\";\nimport { UserContext } from \"../../Store/UserContext\";\nimport { AppDataContext } from \"../../Store/AppDataContext\";\nimport API from \"../../helpers/API\";\nimport { useForm } from \"react-hook-form\";\nimport { Alert, Col, Dropdown, Row } from \"react-bootstrap\";\nimport loader from \"../../images/loader.gif\";\nimport mtn from \"../../images/mtn.svg\";\nimport glo from \"../../images/glo.svg\";\nimport airtel from \"../../images/airtel.svg\";\nimport etisalat from \"../../images/etisalat.svg\";\nimport profileDropdownImg from \"../../images/profileDropdownImg.svg\";\nimport PaymentCard from \"../../components/PaymentCard\";\nimport { formatCurrency } from \"../../helpers/utils\";\nimport Notification from \"../../components/Notification\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Data = () => {\n  _s();\n\n  const {\n    user,\n    userDispatch\n  } = useContext(UserContext);\n  const [paymentSelectorVisibility, setPaymentSelectorVisibility] = useState(false);\n  const {\n    appData,\n    dispatch\n  } = useContext(AppDataContext);\n  const [error, setError] = useState(\"\");\n  const [notification, setNotification] = useState(false);\n  const [notificationMessage, setNotificationMessage] = useState(\"\");\n  const [loaderClass, setLoaderClass] = useState(\"none\");\n  const [buttonClass, setButtonClass] = useState(\"inline\");\n  const {\n    register,\n    setValue,\n    handleSubmit,\n    getValues,\n    formState: {\n      errors,\n      isDirty,\n      isValid\n    }\n  } = useForm({\n    mode: \"onChange\"\n  });\n\n  const onSubmit = paymentMethod => {\n    if (loaderClass === \"inline\") return;\n    setError(\"\");\n    setLoaderClass(\"inline\");\n    setButtonClass(\"none\");\n    API(\"post\", \"dataPurchase\", {\n      planId: plan.id,\n      ...paymentMethod,\n      ...getValues()\n    }, onSuccess, onFail, user.data && user.token);\n  };\n\n  function onSuccess(data) {\n    console.log(data);\n\n    if (data.data.payment_url) {\n      window.location = data.data.payment_url.data.link;\n    } else {\n      //if it wasn't an ATM transfer, display modal\n      setNotification(true);\n      setNotificationMessage(data.message);\n    }\n  }\n\n  function onFail(error) {\n    setError(error);\n    setLoaderClass(\"none\");\n    setButtonClass(\"inline\");\n  }\n\n  const [network, setSelectedNetwork] = useState({});\n  const [plan, setSelectedPlan] = useState({});\n  const networks = {\n    MTN: {\n      img: mtn,\n      name: \"MTN\"\n    },\n    GLO: {\n      img: glo,\n      name: \"GLO\"\n    },\n    AIRTEL: {\n      img: airtel,\n      name: \"AIRTEL\"\n    },\n    ETISALAT: {\n      img: etisalat,\n      name: \"9Mobile\"\n    }\n  };\n\n  function selectNetwork(network) {\n    setSelectedPlan({});\n    const objectValues = Object.values(networks);\n    objectValues.map(net => {\n      if (net.name == network) {\n        setSelectedNetwork(net);\n      }\n    });\n  }\n\n  if (notification) return /*#__PURE__*/_jsxDEV(Notification, {\n    message: notificationMessage\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 28\n  }, this);else return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-48-16 w-100\",\n    children: [/*#__PURE__*/_jsxDEV(PaymentCard, {\n      onSubmit: onSubmit,\n      paymentSelectorVisibility: paymentSelectorVisibility,\n      setPaymentSelectorVisibility: setPaymentSelectorVisibility,\n      amount: plan.wallet_price\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-p t-26\",\n      children: \"Data Purchase\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"t-14\",\n      children: \"Purchase your data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }, this), user.data ? /*#__PURE__*/_jsxDEV(WalletCardSI, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 22\n    }, this) : /*#__PURE__*/_jsxDEV(WalletCardNSI, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 41\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n      className: \"mt-0 mb-3 pt-0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-4\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \" mb-3 text-start\",\n        children: [errors.required && /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"This field is required\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 33\n        }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n          className: \"bg-danger text-white\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"t-16-14 pt-4 m-0 mb-1\",\n          children: \"Select Network\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n          children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n            className: \"w-100 bg-white text-black form-input  align-items-center\",\n            bsPrefix: \"p-0\",\n            id: \"dropdown-basic\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-start  w-100 m-1  align-items-center \",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: network.img,\n                width: 40\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"mt-2 float-end  me-3 t-16 text-s \",\n                children: [network.name, /*#__PURE__*/_jsxDEV(\"img\", {\n                  className: \"  ms-3 me-2 \",\n                  src: profileDropdownImg\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n            className: \"w-100 \",\n            children: Object.values(networks).map((network, index) => {\n              return /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                className: \"  align-items-center\",\n                onClick: () => selectNetwork(network.name),\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"  align-items-center w-100 m-2 \",\n                  children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                    src: network.img,\n                    width: 40\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 139,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \" float-end mt-2 me-3 t-16 text-s\",\n                    children: network.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 140,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 23\n                }, this)\n              }, \"selector\" + index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"t-16-14 pt-4 m-0 mb-1\",\n          children: \"Select Data Plan\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n          children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n            className: \"w-100 bg-white text-black form-input  align-items-center\",\n            bsPrefix: \"p-0\",\n            id: \"dropdown-basic\",\n            children: /*#__PURE__*/_jsxDEV(Row, {\n              className: \"    m-2 \",\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                xs: \"8\",\n                className: \"text-start\",\n                children: plan.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                xs: \"4\",\n                className: \"text-end\",\n                children: plan.wallet_price && /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: [\"\\u20A6\", formatCurrency(plan.wallet_price)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 164,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n            className: \"w-100 \",\n            children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n              className: \"  align-items-end\",\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                className: \"    m-2 \",\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  xs: \"8\",\n                  children: \"Plan\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 172,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  xs: \"4\",\n                  className: \" text-end\",\n                  children: \"Price\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 173,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 17\n            }, this), network.name && Object.values(appData.data_plans[network.name]).map((plan, index) => {\n              return /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                className: \"  align-items-center\",\n                onClick: () => setSelectedPlan(plan),\n                children: /*#__PURE__*/_jsxDEV(Row, {\n                  className: \"    m-2 \",\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    xs: \"8\",\n                    children: plan.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 188,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    xs: \"4\",\n                    className: \" text-end\",\n                    children: [\"\\u20A6\", formatCurrency(plan.wallet_price)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 189,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 187,\n                  columnNumber: 27\n                }, this)\n              }, \"selector\" + index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 25\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"t-16-14 pt-4 m-0 mb-1\",\n          children: \"Phone Number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-input form-control  mt-1 mb-2\",\n          ...register(\"phoneNumber\", {\n            required: true,\n            maxLength: 11,\n            minLength: 11,\n            pattern: {\n              value: /^[0-9]*$/,\n              message: \"invalid phone number\"\n            },\n            onChange: e => {\n              setValue(\"phoneNumber\", e.target.value.replace(/\\D/g, \"\"));\n            }\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"form-control mt-4 button\",\n          onClick: e => {\n            e.preventDefault();\n            setPaymentSelectorVisibility(true);\n          },\n          disabled: !isDirty || !isValid || !plan.id // here\n          ,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              display: buttonClass\n            },\n            children: \"Proceed to Pay\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"loader-icon\",\n            src: loader,\n            style: {\n              display: loaderClass\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Data, \"3yGzjJmv3x9CIGls4Z4AOE5dlKM=\", false, function () {\n  return [useForm];\n});\n\n_c = Data;\nexport default Data;\n\nvar _c;\n\n$RefreshReg$(_c, \"Data\");","map":{"version":3,"sources":["C:/All Projects/billerr/DataNowUserReact3/src/pages/Data/Data.tsx"],"names":["React","useState","useContext","WalletCardNSI","WalletCardSI","UserContext","AppDataContext","API","useForm","Alert","Col","Dropdown","Row","loader","mtn","glo","airtel","etisalat","profileDropdownImg","PaymentCard","formatCurrency","Notification","Data","user","userDispatch","paymentSelectorVisibility","setPaymentSelectorVisibility","appData","dispatch","error","setError","notification","setNotification","notificationMessage","setNotificationMessage","loaderClass","setLoaderClass","buttonClass","setButtonClass","register","setValue","handleSubmit","getValues","formState","errors","isDirty","isValid","mode","onSubmit","paymentMethod","planId","plan","id","onSuccess","onFail","data","token","console","log","payment_url","window","location","link","message","network","setSelectedNetwork","setSelectedPlan","networks","MTN","img","name","GLO","AIRTEL","ETISALAT","selectNetwork","objectValues","Object","values","map","net","wallet_price","required","index","data_plans","maxLength","minLength","pattern","value","onChange","e","target","replace","preventDefault","display"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from \"react\";\r\nimport WalletCardNSI from \"../../components/WalletCardNSI\";\r\nimport WalletCardSI from \"../../components/WalletCardSI\";\r\nimport { UserContext } from \"../../Store/UserContext\";\r\nimport { AppDataContext } from \"../../Store/AppDataContext\";\r\nimport API from \"../../helpers/API\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Alert, Col, Dropdown, Row } from \"react-bootstrap\";\r\nimport loader from \"../../images/loader.gif\";\r\nimport mtn from \"../../images/mtn.svg\";\r\nimport glo from \"../../images/glo.svg\";\r\nimport airtel from \"../../images/airtel.svg\";\r\nimport etisalat from \"../../images/etisalat.svg\";\r\nimport profileDropdownImg from \"../../images/profileDropdownImg.svg\";\r\nimport PaymentCard from \"../../components/PaymentCard\";\r\nimport { formatCurrency } from \"../../helpers/utils\";\r\nimport Notification from \"../../components/Notification\";\r\n\r\nconst Data = () => {\r\n  const { user, userDispatch } = useContext(UserContext);\r\n  const [paymentSelectorVisibility, setPaymentSelectorVisibility] =\r\n    useState(false);\r\n  const { appData, dispatch } = useContext(AppDataContext);\r\n\r\n  const [error, setError] = useState(\"\");\r\n  const [notification, setNotification] = useState(false);\r\n  const [notificationMessage, setNotificationMessage] = useState(\"\");\r\n\r\n  const [loaderClass, setLoaderClass] = useState(\"none\");\r\n  const [buttonClass, setButtonClass] = useState(\"inline\");\r\n\r\n  const {\r\n    register,\r\n    setValue,\r\n    handleSubmit,\r\n    getValues,\r\n    formState: { errors, isDirty, isValid },\r\n  } = useForm({ mode: \"onChange\" });\r\n\r\n  const onSubmit = (paymentMethod: any) => {\r\n    if (loaderClass === \"inline\") return;\r\n    setError(\"\");\r\n    setLoaderClass(\"inline\");\r\n    setButtonClass(\"none\");\r\n\r\n    API(\r\n      \"post\",\r\n      \"dataPurchase\",\r\n      { planId: plan.id, ...paymentMethod, ...getValues() },\r\n      onSuccess,\r\n      onFail,\r\n      user.data && user.token\r\n    );\r\n  };\r\n\r\n  function onSuccess(data: any) {\r\n    console.log(data);\r\n    if (data.data.payment_url) {\r\n      window.location = data.data.payment_url.data.link;\r\n    } else {\r\n      //if it wasn't an ATM transfer, display modal\r\n      setNotification(true);\r\n      setNotificationMessage(data.message);\r\n    }\r\n  }\r\n\r\n  function onFail(error: string) {\r\n    setError(error);\r\n    setLoaderClass(\"none\");\r\n    setButtonClass(\"inline\");\r\n  }\r\n\r\n  const [network, setSelectedNetwork] = useState({} as any);\r\n  const [plan, setSelectedPlan] = useState({} as any);\r\n  const networks = {\r\n    MTN: { img: mtn, name: \"MTN\" },\r\n    GLO: { img: glo, name: \"GLO\" },\r\n    AIRTEL: { img: airtel, name: \"AIRTEL\" },\r\n    ETISALAT: { img: etisalat, name: \"9Mobile\" },\r\n  };\r\n\r\n  function selectNetwork(network: any) {\r\n    setSelectedPlan({});\r\n    const objectValues = Object.values(networks);\r\n    objectValues.map((net) => {\r\n      if (net.name == network) {\r\n        setSelectedNetwork(net);\r\n      }\r\n    });\r\n  }\r\n\r\n  if (notification) return <Notification message={notificationMessage} />;\r\n  else\r\n    return (\r\n      <div className=\"p-48-16 w-100\">\r\n        <PaymentCard\r\n          onSubmit={onSubmit}\r\n          paymentSelectorVisibility={paymentSelectorVisibility}\r\n          setPaymentSelectorVisibility={setPaymentSelectorVisibility}\r\n          amount={plan.wallet_price}\r\n        />\r\n        <p className=\"text-p t-26\">Data Purchase</p>\r\n\r\n        <p className=\"t-14\">Purchase your data</p>\r\n\r\n        {user.data ? <WalletCardSI /> : <WalletCardNSI />}\r\n\r\n        <hr className=\"mt-0 mb-3 pt-0\"></hr>\r\n        <div className=\"bg-white p-4\">\r\n          <form className=\" mb-3 text-start\">\r\n            {errors.required && <span>This field is required</span>}\r\n            {error && <Alert className=\"bg-danger text-white\">{error}</Alert>}\r\n            <p className=\"t-16-14 pt-4 m-0 mb-1\">Select Network</p>\r\n\r\n            <Dropdown>\r\n              <Dropdown.Toggle\r\n                className=\"w-100 bg-white text-black form-input  align-items-center\"\r\n                bsPrefix=\"p-0\"\r\n                id=\"dropdown-basic\"\r\n              >\r\n                <div className=\"text-start  w-100 m-1  align-items-center \">\r\n                  <img src={network.img} width={40} />\r\n                  <label className=\"mt-2 float-end  me-3 t-16 text-s \">\r\n                    {network.name}\r\n                    <img className=\"  ms-3 me-2 \" src={profileDropdownImg} />\r\n                  </label>\r\n                </div>\r\n              </Dropdown.Toggle>\r\n              <Dropdown.Menu className=\"w-100 \">\r\n                {Object.values(networks).map((network, index) => {\r\n                  return (\r\n                    <Dropdown.Item\r\n                      className=\"  align-items-center\"\r\n                      onClick={() => selectNetwork(network.name)}\r\n                      key={\"selector\" + index}\r\n                    >\r\n                      <div className=\"  align-items-center w-100 m-2 \">\r\n                        <img src={network.img} width={40} />\r\n                        <label className=\" float-end mt-2 me-3 t-16 text-s\">\r\n                          {network.name}\r\n                        </label>\r\n                      </div>\r\n                    </Dropdown.Item>\r\n                  );\r\n                })}\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n\r\n            <p className=\"t-16-14 pt-4 m-0 mb-1\">Select Data Plan</p>\r\n\r\n            <Dropdown>\r\n              <Dropdown.Toggle\r\n                className=\"w-100 bg-white text-black form-input  align-items-center\"\r\n                bsPrefix=\"p-0\"\r\n                id=\"dropdown-basic\"\r\n              >\r\n                <Row className=\"    m-2 \">\r\n                  <Col xs=\"8\" className=\"text-start\">\r\n                    {plan.name}\r\n                  </Col>\r\n                  <Col xs=\"4\" className=\"text-end\">\r\n                    {plan.wallet_price && (\r\n                      <label>₦{formatCurrency(plan.wallet_price)}</label>\r\n                    )}\r\n                  </Col>\r\n                </Row>\r\n              </Dropdown.Toggle>\r\n              <Dropdown.Menu className=\"w-100 \">\r\n                <Dropdown.Item className=\"  align-items-end\">\r\n                  <Row className=\"    m-2 \">\r\n                    <Col xs=\"8\">Plan</Col>\r\n                    <Col xs=\"4\" className=\" text-end\">\r\n                      Price\r\n                    </Col>\r\n                  </Row>\r\n                </Dropdown.Item>\r\n                {network.name &&\r\n                  Object.values(appData.data_plans[network.name]).map(\r\n                    (plan: any, index) => {\r\n                      return (\r\n                        <Dropdown.Item\r\n                          className=\"  align-items-center\"\r\n                          onClick={() => setSelectedPlan(plan)}\r\n                          key={\"selector\" + index}\r\n                        >\r\n                          <Row className=\"    m-2 \">\r\n                            <Col xs=\"8\">{plan.name}</Col>\r\n                            <Col xs=\"4\" className=\" text-end\">\r\n                              ₦{formatCurrency(plan.wallet_price)}\r\n                            </Col>\r\n                          </Row>\r\n                        </Dropdown.Item>\r\n                      );\r\n                    }\r\n                  )}\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n\r\n            <p className=\"t-16-14 pt-4 m-0 mb-1\">Phone Number</p>\r\n            <input\r\n              className=\"form-input form-control  mt-1 mb-2\"\r\n              {...register(\"phoneNumber\", {\r\n                required: true,\r\n                maxLength: 11,\r\n                minLength: 11,\r\n                pattern: {\r\n                  value: /^[0-9]*$/,\r\n                  message: \"invalid phone number\",\r\n                },\r\n                onChange: (e) => {\r\n                  setValue(\"phoneNumber\", e.target.value.replace(/\\D/g, \"\"));\r\n                },\r\n              })}\r\n            />\r\n\r\n            <button\r\n              className=\"form-control mt-4 button\"\r\n              onClick={(e) => {\r\n                e.preventDefault();\r\n                setPaymentSelectorVisibility(true);\r\n              }}\r\n              disabled={!isDirty || !isValid || !plan.id} // here\r\n            >\r\n              <label style={{ display: buttonClass }}>Proceed to Pay</label>\r\n              <img\r\n                className=\"loader-icon\"\r\n                src={loader}\r\n                style={{ display: loaderClass }}\r\n              />\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default Data;\r\n"]},"metadata":{},"sourceType":"module"}